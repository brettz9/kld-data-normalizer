{"version":3,"file":"index-esm.min.js","sources":["../lib/NormalizerParser.js","../lib/Normalizer.js"],"sourcesContent":["/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,6],$V2=[1,8],$V3=[1,7],$V4=[8,25,26,34,37,40,42,52],$V5=[1,32],$V6=[1,31],$V7=[1,6,17,18,19,20,21,22,23,25,26,28,30,32,34,36,37,46,50,53,55,56,62],$V8=[26,34,37],$V9=[1,47],$Va=[1,51],$Vb=[1,52],$Vc=[1,64],$Vd=[1,54],$Ve=[1,55],$Vf=[1,56],$Vg=[1,65],$Vh=[1,57],$Vi=[1,59],$Vj=[1,61],$Vk=[1,63],$Vl=[1,71],$Vm=[17,18,19,20,21,22,23,25,26,28,30,32,34,36,37,46,50,53,55,56,62],$Vn=[1,78],$Vo=[1,83],$Vp=[26,34,37,46],$Vq=[1,91],$Vr=[20,53,55],$Vs=[20,53,55,56],$Vt=[26,55],$Vu=[1,104],$Vv=[1,113],$Vw=[1,112],$Vx=[53,55],$Vy=[26,34,37,50],$Vz=[17,18,19,21,22,23,25,26,28,30,32,34,36,37,46,50],$VA=[17,18,19,21,22,23,25,26,28,30,32,34,36,37];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"program\":3,\"typeDeclarations\":4,\"typeDeclaration\":5,\"TYPE\":6,\"stringOrIdentifier\":7,\"=\":8,\"typeDescription\":9,\"anyDescription\":10,\"arrayDescription\":11,\"booleanDescription\":12,\"enumerationDescription\":13,\"numberDescription\":14,\"objectDescription\":15,\"stringDescription\":16,\"ANY_TYPE\":17,\"ARRAY_TYPE\":18,\"[\":19,\"]\":20,\"BOOLEAN_TYPE\":21,\"TRUE\":22,\"FALSE\":23,\"ENUMERATION\":24,\"{\":25,\"}\":26,\"identifiers\":27,\"NUMBER_TYPE\":28,\"float\":29,\"OBJECT_TYPE\":30,\"canonicalProperties\":31,\"STRING_TYPE\":32,\"string\":33,\"STRING\":34,\"integer\":35,\"NUMBER\":36,\"IDENTIFIER\":37,\"canonicalProperty\":38,\"groupBlock\":39,\":\":40,\"typePattern\":41,\"<=\":42,\"expression\":43,\"groups\":44,\"group\":45,\"GROUP\":46,\"patternMatches\":47,\"namedTypePattern\":48,\"patternMatch\":49,\"MATCH\":50,\"typePatterns\":51,\"(\":52,\")\":53,\"parameterList\":54,\",\":55,\"AS\":56,\"arrayPattern\":57,\"objectPattern\":58,\"elements\":59,\"namedElement\":60,\"element\":61,\";\":62,\"range\":63,\"..\":64,\"properties\":65,\"namedProperty\":66,\"property\":67,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"TYPE\",8:\"=\",17:\"ANY_TYPE\",18:\"ARRAY_TYPE\",19:\"[\",20:\"]\",21:\"BOOLEAN_TYPE\",22:\"TRUE\",23:\"FALSE\",24:\"ENUMERATION\",25:\"{\",26:\"}\",28:\"NUMBER_TYPE\",30:\"OBJECT_TYPE\",32:\"STRING_TYPE\",34:\"STRING\",36:\"NUMBER\",37:\"IDENTIFIER\",40:\":\",42:\"<=\",46:\"GROUP\",50:\"MATCH\",52:\"(\",53:\")\",55:\",\",56:\"AS\",62:\";\",64:\"..\"},\nproductions_: [0,[3,1],[4,2],[4,1],[5,4],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[10,1],[11,1],[11,2],[12,1],[12,1],[12,1],[13,3],[13,4],[14,1],[14,1],[15,1],[15,2],[15,3],[16,1],[16,1],[27,2],[27,1],[33,1],[35,1],[29,1],[7,1],[7,1],[31,2],[31,1],[38,1],[38,2],[38,3],[38,4],[39,2],[39,3],[44,2],[44,1],[45,4],[45,3],[47,2],[47,1],[49,4],[49,5],[49,3],[43,1],[43,3],[43,4],[54,3],[54,1],[51,2],[51,1],[48,1],[48,3],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[57,2],[57,3],[59,3],[59,1],[60,1],[60,3],[61,1],[61,3],[61,3],[61,5],[63,3],[63,2],[63,2],[63,1],[58,2],[58,3],[65,3],[65,1],[66,1],[66,3],[67,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0];\nbreak;\ncase 2: case 27: case 34: case 42: case 46: case 56:\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1]\nbreak;\ncase 3: case 28: case 35: case 43: case 47: case 55: case 57: case 76: case 90:\nthis.$ = [ $$[$0] ];\nbreak;\ncase 4:\nthis.$ = { type: 'type-declaration', name: $$[$0-2], declaration: $$[$0] };\nbreak;\ncase 12:\nthis.$ = { type: 'any', value: null };\nbreak;\ncase 13:\nthis.$ = { type: 'array', value: null };\nbreak;\ncase 14:\nthis.$ = { type: 'array-instance', value: [] };\nbreak;\ncase 15:\nthis.$ = { type: 'boolean', value: null };\nbreak;\ncase 16:\nthis.$ = { type: 'boolean-instance', value: true };\nbreak;\ncase 17:\nthis.$ = { type: 'boolean-instance', value: false };\nbreak;\ncase 18:\nthis.$ = { type: 'enumeration', value: [] };\nbreak;\ncase 19:\nthis.$ = { type: 'enumeration', value: $$[$0-1] };\nbreak;\ncase 20:\nthis.$ = { type: 'number', value: null };\nbreak;\ncase 21:\nthis.$ = { type: 'number-instance', value: $$[$0] };\nbreak;\ncase 22:\nthis.$ = { type: 'object', value: null };\nbreak;\ncase 23:\nthis.$ = { type: 'object-instance', value: {} };\nbreak;\ncase 24:\nthis.$ = { type: 'object-instance', value: $$[$0-1] };\nbreak;\ncase 25:\nthis.$ = { type: 'string', value: null };\nbreak;\ncase 26:\nthis.$ = { type: 'string-instance', value: $$[$0]};\nbreak;\ncase 29: case 33:\nthis.$ = $$[$0].substring(1,  $$[$0].length - 1);\nbreak;\ncase 30:\nthis.$ = parseInt($$[$0]);\nbreak;\ncase 31:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 32:\nthis.$ = $$[$0]\nbreak;\ncase 36:\nthis.$ = { type: 'canonical-property', name: $$[$0], groups: [], returnValue: null };\nbreak;\ncase 37:\nthis.$ = { type: 'canonical-property', name: $$[$0-1], groups: $$[$0], returnValue: null };\nbreak;\ncase 38:\nthis.$ = {\n    type: \"canonical-property\",\n    name: $$[$0-2],\n    groups: [\n        {\n            type: \"group\",\n            matches: [ { type: \"match\", name: $$[$0-2], patterns: [ $$[$0] ] } ]\n        }\n    ],\n    returnValue: null\n};\nbreak;\ncase 39:\nthis.$ = { type: 'canonical-property', name: $$[$0-3], groups: $$[$0], returnValue: $$[$0-1] };\nbreak;\ncase 40:\nthis.$ = [];\nbreak;\ncase 41:\nthis.$ = $$[$0-1];\nbreak;\ncase 44:\nthis.$ = { type: 'group', matches: $$[$0-1] };\nbreak;\ncase 45:\nthis.$ = { type: 'group', matches: [ { type: 'match', name: $$[$0-2], patterns: [ $$[$0] ] } ] };\nbreak;\ncase 48:\nthis.$ = { type: 'match', name: $$[$0-2], patterns: [] };\nbreak;\ncase 49:\nthis.$ = { type: 'match', name: $$[$0-3], patterns: $$[$0-1] };\nbreak;\ncase 50:\nthis.$ = { type: \"match\", name: $$[$0-2], patterns: [ $$[$0] ] }\nbreak;\ncase 51:\nthis.$ = { type: 'expression', expression: { type: 'get-value', name: $$[$0] } };\nbreak;\ncase 52:\nthis.$ = { type: 'expression', expression: { type: 'invoke', name: $$[$0-2], args: [] } };\nbreak;\ncase 53:\nthis.$ = { type: 'expression', expression: { type: 'invoke', name: $$[$0-3], args: $$[$0-1] } };\nbreak;\ncase 54: case 75: case 89:\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2]\nbreak;\ncase 58: case 77:\n$$[$0].assignTo = null; this.$ = $$[$0];\nbreak;\ncase 59: case 78: case 92:\n$$[$0-2].assignTo = $$[$0]; this.$ = $$[$0-2];\nbreak;\ncase 60:\nthis.$ = { type: 'pattern', patternType: 'any', value: null };\nbreak;\ncase 61:\nthis.$ = { type: 'pattern', patternType: 'array', value: null };\nbreak;\ncase 62: case 69:\nthis.$ = $$[$0];\nbreak;\ncase 63:\nthis.$ = { type: 'pattern', patternType: 'boolean', value: null };\nbreak;\ncase 64:\nthis.$ = { type: 'pattern', patternType: 'boolean', value: true };\nbreak;\ncase 65:\nthis.$ = { type: 'pattern', patternType: 'boolean', value: false };\nbreak;\ncase 66:\nthis.$ = { type: 'pattern', patternType: 'number', value: null };\nbreak;\ncase 67:\nthis.$ = { type: 'pattern', patternType: 'number', value: $$[$0] };\nbreak;\ncase 68: case 87:\nthis.$ = { type: 'pattern', patternType: 'object', value: null };\nbreak;\ncase 70:\nthis.$ = { type: 'pattern', patternType: 'string', value: null };\nbreak;\ncase 71:\nthis.$ = { type: 'pattern', patternType: 'string', value: $$[$0] };\nbreak;\ncase 72:\nthis.$ = { type: 'pattern', value: $$[$0] };\nbreak;\ncase 73:\nthis.$ = { type: 'pattern', patternType: 'array-pattern', value: [] };\nbreak;\ncase 74:\nthis.$ = { type: 'pattern', patternType: 'array-pattern', value: $$[$0-1] };\nbreak;\ncase 79:\nthis.$ = { type: 'element', pattern: $$[$0], range: { type: 'range', start: 1, stop: 1 } };\nbreak;\ncase 80:\nthis.$ = { type: 'element', pattern: $$[$0-2], range: $$[$0] };\nbreak;\ncase 81:\nthis.$ = { type: 'element-group', elements: $$[$0-1], range: { type: 'range', start: 1, stop: 1 } };\nbreak;\ncase 82:\nthis.$ = { type: 'element-group', elements: $$[$0-3], range: $$[$0] };\nbreak;\ncase 83:\nthis.$ = { type: 'range', start: $$[$0-2], stop: $$[$0] };\nbreak;\ncase 84:\nthis.$ = { type: 'range', start: 0, stop: $$[$0] };\nbreak;\ncase 85:\nthis.$ = { type: 'range', start: $$[$0-1], stop: Infinity };\nbreak;\ncase 86:\nthis.$ = { type: 'range', start: $$[$0], stop: $$[$0] };\nbreak;\ncase 88:\nthis.$ = { type: 'pattern', patternType: 'object-pattern', value: $$[$0-1] };\nbreak;\ncase 91:\n$$[$0].assignTo = $$[$0].name; this.$ = $$[$0];\nbreak;\ncase 93:\nthis.$ = { type: 'property', name: $$[$0-2], pattern: $$[$0] };\nbreak;\n}\n},\ntable: [{3:1,4:2,5:3,6:$V0},{1:[3]},{1:[2,1],5:5,6:$V0},o($V1,[2,3]),{7:6,34:$V2,37:$V3},o($V1,[2,2]),{8:[1,9]},o($V4,[2,32]),o($V4,[2,33]),{9:10,10:11,11:12,12:13,13:14,14:15,15:16,16:17,17:[1,18],18:[1,19],19:[1,20],21:[1,21],22:[1,22],23:[1,23],24:[1,24],25:[1,28],28:[1,25],29:26,30:[1,27],32:[1,29],33:30,34:$V5,36:$V6},o($V1,[2,4]),o($V1,[2,5]),o($V1,[2,6]),o($V1,[2,7]),o($V1,[2,8]),o($V1,[2,9]),o($V1,[2,10]),o($V1,[2,11]),o($V1,[2,12]),o($V1,[2,13]),{20:[1,33]},o($V1,[2,15]),o($V1,[2,16]),o($V1,[2,17]),{25:[1,34]},o($V1,[2,20]),o($V1,[2,21]),o($V1,[2,22]),{7:38,26:[1,35],31:36,34:$V2,37:$V3,38:37},o($V1,[2,25]),o($V1,[2,26]),o($V7,[2,31]),o($V7,[2,29]),o($V1,[2,14]),{7:41,26:[1,39],27:40,34:$V2,37:$V3},o($V1,[2,23]),{7:38,26:[1,42],34:$V2,37:$V3,38:43},o($V8,[2,35]),o($V8,[2,36],{39:44,25:$V9,40:[1,45],42:[1,46]}),o($V1,[2,18]),{7:49,26:[1,48],34:$V2,37:$V3},o($V8,[2,28]),o($V1,[2,24]),o($V8,[2,34]),o($V8,[2,37]),{17:$Va,18:$Vb,19:$Vc,21:$Vd,22:$Ve,23:$Vf,25:$Vg,28:$Vh,29:58,30:$Vi,32:$Vj,33:62,34:$V5,36:$V6,37:$Vk,41:50,57:53,58:60},{7:67,34:$V2,37:$V3,43:66},{7:72,26:[1,68],34:$V2,37:$V3,44:69,45:70,46:$Vl},o($V1,[2,19]),o($V8,[2,27]),o($V8,[2,38]),o($Vm,[2,60]),o($Vm,[2,61]),o($Vm,[2,62]),o($Vm,[2,63]),o($Vm,[2,64]),o($Vm,[2,65]),o($Vm,[2,66]),o($Vm,[2,67]),o($Vm,[2,68]),o($Vm,[2,69]),o($Vm,[2,70]),o($Vm,[2,71]),o($Vm,[2,72]),{17:$Va,18:$Vb,19:$Vc,20:[1,73],21:$Vd,22:$Ve,23:$Vf,25:$Vg,28:$Vh,29:58,30:$Vi,32:$Vj,33:62,34:$V5,36:$V6,37:$Vk,41:77,52:$Vn,57:53,58:60,59:74,60:75,61:76},{26:[1,79],37:$Vo,65:80,66:81,67:82},{25:$V9,39:84},{25:[2,51],52:[1,85]},o($V8,[2,40]),{7:72,26:[1,86],34:$V2,37:$V3,45:87,46:$Vl},o($Vp,[2,43]),{25:[1,88]},{40:[1,89]},o($Vm,[2,73]),{20:[1,90],55:$Vq},o($Vr,[2,76]),o($Vr,[2,77],{56:[1,92]}),o($Vs,[2,79],{62:[1,93]}),{17:$Va,18:$Vb,19:$Vc,21:$Vd,22:$Ve,23:$Vf,25:$Vg,28:$Vh,29:58,30:$Vi,32:$Vj,33:62,34:$V5,36:$V6,37:$Vk,41:77,52:$Vn,57:53,58:60,59:94,60:75,61:76},o($Vm,[2,87]),{26:[1,95],55:[1,96]},o($Vt,[2,90]),o($Vt,[2,91],{56:[1,97]}),{40:[1,98]},o($V8,[2,39]),{37:[1,101],53:[1,99],54:100},o($V8,[2,41]),o($Vp,[2,42]),{7:105,34:$V2,37:$V3,47:102,49:103,50:$Vu},{17:$Va,18:$Vb,19:$Vc,21:$Vd,22:$Ve,23:$Vf,25:$Vg,28:$Vh,29:58,30:$Vi,32:$Vj,33:62,34:$V5,36:$V6,37:$Vk,41:107,48:106,57:53,58:60},o($Vm,[2,74]),{17:$Va,18:$Vb,19:$Vc,21:$Vd,22:$Ve,23:$Vf,25:$Vg,28:$Vh,29:58,30:$Vi,32:$Vj,33:62,34:$V5,36:$V6,37:$Vk,41:77,52:$Vn,57:53,58:60,60:108,61:76},{37:[1,109]},{35:111,36:$Vv,63:110,64:$Vw},{53:[1,114],55:$Vq},o($Vm,[2,88]),{37:$Vo,66:115,67:82},{37:[1,116]},{17:$Va,18:$Vb,19:$Vc,21:$Vd,22:$Ve,23:$Vf,25:$Vg,28:$Vh,29:58,30:$Vi,32:$Vj,33:62,34:$V5,36:$V6,37:$Vk,41:117,57:53,58:60},{25:[2,52]},{53:[1,118],55:[1,119]},o($Vx,[2,55]),{7:105,26:[1,120],34:$V2,37:$V3,49:121,50:$Vu},o($Vy,[2,47]),{7:122,34:$V2,37:$V3},{40:[1,123]},o($Vp,[2,45]),o($Vz,[2,58],{56:[1,124]}),o($Vr,[2,75]),o($Vr,[2,78]),o($Vs,[2,80]),o($Vs,[2,86],{64:[1,125]}),{35:126,36:$Vv},o([20,53,55,56,64],[2,30]),o($Vs,[2,81],{62:[1,127]}),o($Vt,[2,89]),o($Vt,[2,92]),o([26,55,56],[2,93]),{25:[2,53]},{37:[1,128]},o($Vp,[2,44]),o($Vy,[2,46]),{25:[1,129]},{17:$Va,18:$Vb,19:$Vc,21:$Vd,22:$Ve,23:$Vf,25:$Vg,28:$Vh,29:58,30:$Vi,32:$Vj,33:62,34:$V5,36:$V6,37:$Vk,41:107,48:130,57:53,58:60},{37:[1,131]},o($Vs,[2,85],{35:132,36:$Vv}),o($Vs,[2,84]),{35:111,36:$Vv,63:133,64:$Vw},o($Vx,[2,54]),{17:$Va,18:$Vb,19:$Vc,21:$Vd,22:$Ve,23:$Vf,25:$Vg,26:[1,134],28:$Vh,29:58,30:$Vi,32:$Vj,33:62,34:$V5,36:$V6,37:$Vk,41:107,48:136,51:135,57:53,58:60},o($Vy,[2,50]),o($Vz,[2,59]),o($Vs,[2,83]),o($Vs,[2,82]),o($Vy,[2,48]),{17:$Va,18:$Vb,19:$Vc,21:$Vd,22:$Ve,23:$Vf,25:$Vg,26:[1,137],28:$Vh,29:58,30:$Vi,32:$Vj,33:62,34:$V5,36:$V6,37:$Vk,41:107,48:138,57:53,58:60},o($VA,[2,57]),o($Vy,[2,49]),o($VA,[2,56])],\ndefaultActions: {99:[2,52],118:[2,53]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/* skip comment */\nbreak;\ncase 2:return 17\nbreak;\ncase 3:return 18\nbreak;\ncase 4:return 56\nbreak;\ncase 5:return 21\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 23\nbreak;\ncase 8:return 'FROM'\nbreak;\ncase 9:return 46\nbreak;\ncase 10:return 50\nbreak;\ncase 11:return 28\nbreak;\ncase 12:return 30\nbreak;\ncase 13:return 32\nbreak;\ncase 14:return 22\nbreak;\ncase 15:return 6\nbreak;\ncase 16:return 52\nbreak;\ncase 17:return 53\nbreak;\ncase 18:return 25\nbreak;\ncase 19:return 26\nbreak;\ncase 20:return 19\nbreak;\ncase 21:return 20\nbreak;\ncase 22:return 55\nbreak;\ncase 23:return 40\nbreak;\ncase 24:return 62\nbreak;\ncase 25:return 8\nbreak;\ncase 26:return 42\nbreak;\ncase 27:return 64\nbreak;\ncase 28:return 37\nbreak;\ncase 29:return 36\nbreak;\ncase 30:return 34\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\/\\/.*)/,/^(?:any)/,/^(?:array)/,/^(?:as)/,/^(?:boolean)/,/^(?:enumeration)/,/^(?:false)/,/^(?:from)/,/^(?:group)/,/^(?:match)/,/^(?:number)/,/^(?:object)/,/^(?:string)/,/^(?:true)/,/^(?:type)/,/^(?:\\()/,/^(?:\\))/,/^(?:{)/,/^(?:})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:;)/,/^(?:=)/,/^(?:<=)/,/^(?:\\.\\.)/,/^(?:[a-zA-Z_-][a-zA-Z0-9_-]*)/,/^(?:[-+]?(0|[1-9]\\d*)(\\.\\d+)?)/,/^(?:\"[^\"\\r\\n]*\")/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nexport default parser;\n\n// if (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n// exports.parser = parser;\n// exports.Parser = parser.Parser;\n// exports.parse = function () { return parser.parse.apply(parser, arguments); };\n// exports.main = function commonjsMain (args) {\n//     if (!args[1]) {\n//         console.log('Usage: '+args[0]+' FILE');\n//         process.exit(1);\n//     }\n//     var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n//     return exports.parser.parse(source);\n// };\n// if (typeof module !== 'undefined' && require.main === module) {\n//   exports.main(process.argv.slice(1));\n// }\n// }\n","/**\n *  Normalizer.js\n *\n *  @copyright 2019, Kevin Lindsey\n *  @module Normalizer\n */\n\nimport Parser from \"./NormalizerParser.js\";\n\n/* eslint-disable-next-line compat/compat */\nconsole.log(Object.keys(Parser));\n\nconst FAILURE_VALUE = undefined;\n\n/**\n * Normalizer\n */\nexport default class Normalizer {\n    /**\n     * Create a new empty Normalizer. Normalizers can be used to validate and transform data. However, when a new\n     * Normalizer has been created, it needs to be populated with one or more type descriptions. The easiest way to do\n     * this is with the static method fromSource.\n     */\n    constructor() {\n        this.types = {};\n        this.typeCheckers = {\n            array: (value, type) => Array.isArray(value),\n            boolean: (value, type) => typeof value === \"boolean\",\n            number: (value, type) => typeof value === \"number\",\n            object: (value, type) => typeof value === \"object\",\n            string: (value, type) => typeof value === \"string\"\n        };\n        this.typeCreators = {};\n    }\n\n    /**\n     * Create a new instance of a Normalizer with its type table initially populated from the specified normalizer\n     * source code.\n     *\n     * @param {string} source\n     * @returns {Normalizer}\n     */\n    static fromSource(source) {\n        const result = new Normalizer();\n\n        result.addDefinitionsFromSource(source);\n\n        return result;\n    }\n\n    /**\n     * Create a new instance of a Normalizer with its type table initially populated from the specified serialization\n     * table. This table can be used to cache a parse normalized file and is the output of Parser.parse()\n     *\n     * @param {Array} table\n     * @returns {Normalizer}\n     */\n    static fromTable(table) {\n        const result = new Normalizer();\n\n        result.addDefinitionsFromTable(table);\n\n        return result;\n    }\n\n    /**\n     * Add all type definitions from the specified normalization source code to this Normalizer instance. This will\n     * amend the current types with those specified in the code. Note that any type that has been redefined in the\n     * source code will replace any pre-existing version of that type.\n     *\n     * @param {string} source\n     */\n    addDefinitionsFromSource(source) {\n        const table = Parser.parse(source);\n\n        this.addDefinitionsFromTable(table);\n    }\n\n    /**\n     * Add all type definitions from the specified serialization table to this Normalizer instance. This will amend the\n     * current types with those specified in the table. Note that any type that has been redefined in the table will\n     * replace any pre-existing version of that type.\n     *\n     * @param {Array} table\n     */\n    addDefinitionsFromTable(table) {\n        table.forEach(typeDescription => {\n            this.types[typeDescription.name] = typeDescription;\n        });\n    }\n\n    /**\n     * Query, validate, and/or transform the specified structure according to the specified type description name. If\n     * the specified type does not exist in the current type table, then this method will return undefined.\n     *\n     * @param {*} structure\n     * @param {string} asType\n     * @returns {*}\n     */\n    normalize(structure, asType) {\n        if (asType in this.types === false) {\n            // Should this throw instead?\n            return FAILURE_VALUE;\n        }\n\n        const typeDescriptor = this.types[asType];\n        const typeDeclaration = typeDescriptor.declaration;\n\n        switch (typeDeclaration.type) {\n            case \"any\":\n                return structure;\n\n            case \"array\":\n                return Array.isArray(structure) ? structure : FAILURE_VALUE;\n\n            case \"boolean\":\n                return typeof structure === \"boolean\" ? structure : FAILURE_VALUE;\n\n            case \"boolean-instance\":\n                if (typeof structure === \"boolean\" && structure === typeDeclaration.value) {\n                    return structure;\n                }\n\n                return FAILURE_VALUE;\n\n            case \"enumeration\":\n                if (typeof structure === \"string\") {\n                    if (typeDeclaration.value.includes(structure)) {\n                        return structure;\n                    }\n                }\n\n                return FAILURE_VALUE;\n\n            case \"number\":\n                return typeof structure === \"number\" ? structure : FAILURE_VALUE;\n\n            case \"number-instance\":\n                if (typeof structure === \"number\" && structure === typeDeclaration.value) {\n                    return structure;\n                }\n\n                return FAILURE_VALUE;\n\n            case \"object\":\n                return typeof structure === \"object\" ? structure : FAILURE_VALUE;\n\n            case \"object-instance\": {\n                if (typeof structure !== \"object\") {\n                    return FAILURE_VALUE;\n                }\n\n                const result = {};\n\n                for (const canonicalProperty of typeDeclaration.value) {\n                    const value = this.normalizeCanonicalProperty(canonicalProperty, structure);\n\n                    if (value === FAILURE_VALUE) {\n                        return FAILURE_VALUE;\n                    }\n\n                    if (canonicalProperty.returnValue !== null) {\n                        result[canonicalProperty.name] = this.createResult(canonicalProperty.returnValue.expression, value);\n                    }\n                    else {\n                        result[canonicalProperty.name] = value[canonicalProperty.name];\n                    }\n                }\n\n                return result;\n            }\n\n            case \"string\":\n                return typeof structure === \"string\" ? structure : FAILURE_VALUE;\n\n            case \"string-instance\":\n                if (typeof structure === \"string\" && structure === typeDeclaration.value) {\n                    return structure;\n                }\n\n                return FAILURE_VALUE;\n\n            default:\n                return FAILURE_VALUE;\n        }\n    }\n\n    /*\n     * Acquire the value of a top-level canonical property from the given structure\n     *\n     * @param {object} canonicalProperty\n     * @param {*} structure\n     * @returns {*}\n     */\n    normalizeCanonicalProperty(canonicalProperty, structure) {\n        const {name: propertyName, groups} = canonicalProperty;\n\n        // when we have no groups, we only need to check that the canonical property name exists\n        if (groups.length === 0) {\n            if (propertyName in structure) {\n                const symbolTable = {};\n\n                symbolTable[propertyName] = structure[propertyName];\n\n                return symbolTable;\n            }\n\n            return FAILURE_VALUE;\n        }\n\n        let result = FAILURE_VALUE;\n\n        // try to find a group that succeeds\n        for (const group of groups) {\n            const value = this.normalizeGroup(group, structure);\n\n            if (value !== FAILURE_VALUE) {\n                result = value;\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    /*\n     * Acquire the values of all matches in the group from the specified structure\n     *\n     * @param {object} group\n     * @param {*} structure\n     * @returns {*}\n     */\n    normalizeGroup(group, structure) {\n        const {matches} = group;\n        const symbolTable = {};\n\n        // Something went wrong. Groups have to have one more matches\n        if (matches.length === 0) {\n            const groupText = JSON.stringify(group);\n\n            throw new TypeError(`Groups are required to have at least one match, but this one had none:\\n${groupText}`);\n        }\n\n        // all matchers in this group have to succeed\n        for (const match of matches) {\n            const value = this.normalizeMatch(match, structure);\n\n            if (value === FAILURE_VALUE) {\n                return FAILURE_VALUE;\n            }\n\n            /* eslint-disable-next-line guard-for-in */\n            for (const key in value) {\n                if (key in symbolTable) {\n                    console.error(`Overwriting '${key}' in symbol table`);\n                }\n\n                symbolTable[key] = value[key];\n            }\n        }\n\n        return symbolTable;\n    }\n\n    /*\n     * Acquire the value from the specified structure using a list of type pattern matches\n     *\n     * @param {object} match\n     * @param {*} structure\n     * @returns {*}\n     */\n    normalizeMatch(match, structure) {\n        const {name, patterns} = match;\n        const symbolTable = {};\n\n        if (name in structure) {\n            // try to find a pattern that succeeds\n            for (const pattern of patterns) {\n                // console.log(util.inspect(pattern, { depth: Infinity }));\n\n                const value = this.normalizePattern(pattern, structure[name], symbolTable);\n\n                if (value === FAILURE_VALUE) {\n                    continue;\n                }\n\n                if (\"assignTo\" in pattern && pattern.assignTo !== null) {\n                    symbolTable[pattern.assignTo] = value;\n                }\n                else {\n                    symbolTable[name] = value;\n                }\n\n                return symbolTable;\n            }\n        }\n\n        return FAILURE_VALUE;\n    }\n\n    /*\n     * Acquire the value of a type pattern from the specified structure. Any named entities will be populated in the\n     * specified symbolTable\n     *\n     * @param {object} pattern\n     * @param {*} structure\n     * @param {object} symbolTable\n     * @returns {*}\n     */\n    normalizePattern(pattern, structure, symbolTable) {\n        switch (pattern.patternType) {\n            case \"any\":\n                return structure;\n\n            case \"array\":\n                return Array.isArray(structure) ? structure : FAILURE_VALUE;\n\n            case \"array-pattern\": {\n                if (Array.isArray(structure) === false) {\n                    return FAILURE_VALUE;\n                }\n\n                const result = [];\n                let index = 0;\n\n                for (const element of pattern.value) {\n                    const {pattern: elementPattern, range: {start, stop}, assignTo} = element;\n                    let i;\n\n                    for (i = 0; i < stop; i++) {\n                        const actualIndex = index + i;\n\n                        // treat out-of-bounds like a failure\n                        const value = (actualIndex < structure.length)\n                            ? this.normalizePattern(elementPattern, structure[index + i], symbolTable)\n                            : FAILURE_VALUE;\n\n                        // if we processed enough, continue, else failure\n                        if (value === FAILURE_VALUE) {\n                            if (i >= start) {\n                                break;\n                            }\n\n                            return FAILURE_VALUE;\n                        }\n\n                        // save result\n                        result.push(value);\n\n                        if (assignTo !== null) {\n                            if (assignTo in symbolTable) {\n                                console.log(`warning: overwriting ${assignTo} in symbol table`);\n                            }\n\n                            symbolTable[assignTo] = value;\n                        }\n                    }\n\n                    // advance global index by processed amount\n                    index += i;\n                }\n\n                return index === structure.length ? result : FAILURE_VALUE;\n            }\n\n            case \"boolean\":\n                if (typeof structure === \"boolean\") {\n                    if (pattern.value === null || pattern.value === structure) {\n                        return structure;\n                    }\n                }\n\n                return FAILURE_VALUE;\n\n            case \"number\":\n                if (typeof structure === \"number\") {\n                    if (pattern.value === null || pattern.value === structure) {\n                        return structure;\n                    }\n                }\n\n                return FAILURE_VALUE;\n\n            case \"object\":\n                if (typeof structure === \"object\") {\n                    return structure;\n                }\n\n                return FAILURE_VALUE;\n\n            case \"object-pattern\": {\n                if (typeof structure !== \"object\") {\n                    return FAILURE_VALUE;\n                }\n\n                const result = {};\n\n                for (const property of pattern.value) {\n                    const {name, pattern: propertyPattern, assignTo} = property;\n\n                    if (name in structure) {\n                        const value = this.normalizePattern(propertyPattern, structure[name], symbolTable);\n\n                        if (value === FAILURE_VALUE) {\n                            return FAILURE_VALUE;\n                        }\n\n                        result[assignTo] = value;\n\n                        if (assignTo in symbolTable) {\n                            console.log(`warning: overwriting ${assignTo} in symbol table`);\n                        }\n                        symbolTable[assignTo] = value;\n                    }\n                    else {\n                        return FAILURE_VALUE;\n                    }\n                }\n\n                return result;\n            }\n\n            case \"string\":\n                if (typeof structure === \"string\") {\n                    if (pattern.value === null || pattern.value === structure) {\n                        return structure;\n                    }\n                }\n\n                return FAILURE_VALUE;\n\n            default:\n                throw new TypeError(`unrecognized pattern type: '${pattern.type}'`);\n        }\n    }\n\n    /*\n     * Execute a method and return its value\n     *\n     * @param {object} expression\n     * @param {object} symbolTable\n     * @returns {*}\n     */\n    createResult(expression, symbolTable) {\n        switch (expression.type) {\n            case \"get-value\":\n                return symbolTable[expression.name];\n            case \"invoke\": {\n                const args = expression.args.map(arg => symbolTable[arg]);\n\n                return this.createType(expression.name, args);\n            }\n            // TODO: array and object construction. Allow these inside invocations as well\n            default:\n                throw new TypeError(`unsupported expression type: '${expression.type}'`);\n        }\n    }\n\n    /*\n     * Invoke a user-defined method and return its value\n     *\n     * @param {string} type\n     * @param {Array} args\n     * @returns {*}\n     */\n    createType(type, args) {\n        if (type in this.typeCreators) {\n            return this.typeCreators[type](type, args);\n        }\n        else if (\"*\" in this.typeCreators) {\n            return this.typeCreators[\"*\"](type, args);\n        }\n\n        return null;\n    }\n\n    typeCheck(value, type) {\n        if (type in this.types) {\n            return this.normalize(value, type);\n        }\n        else if (type in this.typeCheckers) {\n            return this.typeCheckers[type](value, type);\n        }\n        else if (\"*\" in this.typeCheckers) {\n            return this.typeCheckers[\"*\"](value, type);\n        }\n\n        return FAILURE_VALUE;\n    }\n}\n"],"names":["parser","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","push","$","type","name","declaration","value","substring","parseInt","parseFloat","groups","returnValue","matches","patterns","expression","args","assignTo","patternType","pattern","range","start","stop","elements","Infinity","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","this","stack","vstack","lstack","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","apply","concat","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","console","log","keys","Normalizer","types","typeCheckers","array","isArray","number","object","_typeof","string","typeCreators","source","result","addDefinitionsFromSource","addDefinitionsFromTable","forEach","typeDescription","_this","structure","asType","typeDeclaration","undefined","includes","canonicalProperty","normalizeCanonicalProperty","createResult","propertyName","group","normalizeGroup","symbolTable","groupText","JSON","stringify","TypeError","normalizeMatch","key","normalizePattern","element","elementPattern","property","propertyPattern","map","arg","createType","normalize"],"mappings":"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"}